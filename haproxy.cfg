global
  #log /dev/log	local0
  #log /dev/log	local1 notice
  #chroot /var/lib/haproxy
  #stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
  #stats timeout 30s
  #user root
  #group root
  daemon
  # Default SSL material locations
  ca-base /etc/ssl/certs
  crt-base /etc/ssl/private
  # Default ciphers to use on SSL-enabled listening sockets.
  # For more information, see ciphers(1SSL). This list is from:
  #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
  # An alternative list with additional directives can be obtained from
  #  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
  ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
  ssl-default-bind-options no-sslv3

defaults
  log	global
  mode	http
  option	httplog
  option	dontlognull
  timeout connect 5000
  timeout client  50000
  timeout server  50000
  errorfile 400 /etc/haproxy/errors/400.http
  errorfile 403 /etc/haproxy/errors/403.http
  errorfile 408 /etc/haproxy/errors/408.http
  errorfile 500 /etc/haproxy/errors/500.http
  errorfile 502 /etc/haproxy/errors/502.http
  errorfile 503 /etc/haproxy/errors/503.http
  errorfile 504 /etc/haproxy/errors/504.http

listen stats # Define a listen section called "stats"
  bind :9000 # Listen on localhost:9000
  mode http
  stats enable  # Enable stats page
  stats hide-version  # Hide HAProxy version
  stats realm Haproxy\ Statistics  # Title text for popup window
  stats uri /haproxy_stats  # Stats URI
  stats auth UsernameTest2:PasswordSuperSecure  # Authentication credentials

frontend Local_Server
  bind :80
  mode http

  acl VHOST_cortijo_public req.hdr(Host) -i -m dom public.cortijodemazas.com
  acl VHOST_jenkins req.hdr(Host) -i -m dom jenkins.cortijodemazas.com
  acl VHOST_cortijo_app req.hdr(Host) -i -m dom www.cortijodemazas.com
  acl VHOST_cortijo_app req.hdr(Host) -i -m dom app.cortijodemazas.com
  acl VHOST_cortijo_app_back req.hdr(Host) -i -m dom back.app.cortijodemazas.com
  acl VHOST_cortijo_camera_1 req.hdr(Host) -i -m dom camera1.cortijodemazas.com
  acl VHOST_cortijo_camera_2 req.hdr(Host) -i -m dom camera2.cortijodemazas.com
  acl VHOST_cortijo_camera req.hdr(Host) -i -m dom camera.cortijodemazas.com
  acl VHOST_cortijo_socket req.hdr(Host) -i -m dom socket.cortijodemazas.com
  acl VHOST_cortijo_file req.hdr(Host) -i -m dom file.cortijodemazas.com
  acl VHOST_router req.hdr(Host) -i -m dom router.cortijodemazas.com
  acl VHOST_gitlab req.hdr(Host) -i -m dom gitlab.cortijodemazas.com
  acl VHOST_ssh_gitlab req.hdr(Host) -i -m dom ssh_gitlab.cortijodemazas.com
  acl VHOST_cortijo_ws req.hdr(Host) -i -m dom ws.cortijodemazas.com
  acl VHOST_octopi req.hdr(Host) -i -m dom octopi.cortijodemazas.com
  acl VHOST_dockerhub req.hdr(Host) -i -m dom dockerhub.cortijodemazas.com
  acl VHOST_couchbase req.hdr(Host) -i -m dom couchbase.cortijodemazas.com
  acl VHOST_vpn req.hdr(Host) -i -m dom vpn.cortijodemazas.com
  acl VHOST_haproxy req.hdr(Host) -i -m dom haproxy.cortijodemazas.com
  acl VHOST_cortijo_app req.hdr(Host) -i -m dom cortijodemazas.com
  acl VHOST_afro req.hdr(Host) -i -m dom app.appafrodita.com
  acl VHOST_afro req.hdr(Host) -i -m dom appafrodita.com
  acl VHOST_afro req.hdr(Host) -i -m dom www.appafrodita.com

  # acl PATH_back path_beg -i /device
  # acl PATH_back path_beg -i /back
  use_backend router if VHOST_router
  use_backend gitlab if VHOST_gitlab
  use_backend ssh_gitlab if VHOST_ssh_gitlab
  use_backend octopi if VHOST_octopi
  use_backend dockerhub if VHOST_dockerhub
  use_backend couchbase if VHOST_couchbase
  use_backend cortijo_camera if VHOST_cortijo_camera
  use_backend cortijo_socket if VHOST_cortijo_socket
  use_backend cortijo_file if VHOST_cortijo_file
  use_backend api_jenkins if VHOST_jenkins
  use_backend api_vpn if VHOST_vpn
  use_backend cortijo_app_back if VHOST_cortijo_app_back
  use_backend cortijo_app_front if VHOST_cortijo_app
  use_backend cortijo_public if VHOST_cortijo_public
  use_backend cortijo_camera_1 if VHOST_cortijo_camera_1
  use_backend cortijo_camera_2 if VHOST_cortijo_camera_2
  use_backend afro_app if VHOST_afro
  use_backend cortijo_ws if VHOST_cortijo_ws
  use_backend cortijo_haproxy if VHOST_haproxy

  #default_backend default_app

backend cortijo_app_front
  mode http
  #balance roundrobin
  #option forwardfor
  #http-request set-header X-Forwarded-Port %[dst_port]
  #http-request add-header X-Forwarded-Proto https if { ssl_fc }
  #option httpchk HEAD / HTTP/1.1rnHost:localhost
  #http-request set-header Host localhost
  server front 192.168.1.53:8300 check

backend cortijo_app_back
  mode http
  server back 192.168.1.53:8000 check

backend cortijo_public
  mode http
  balance roundrobin
  option forwardfor
  server public_1 192.168.1.53:8301 #check
  server public_2 192.168.1.53:8302 #check

backend api_jenkins
  mode http
  server jenkins 192.168.1.53:8080 #check

backend api_vpn
  mode http
  server vpn 192.168.1.53:11911 #check

backend afro_app
  mode http
  server afro 192.168.1.53:8990 #check

backend cortijo_camera_1
  mode http
  server camera1 192.168.1.45 #check

backend cortijo_camera_2
  mode http
  server camera2 192.168.1.60 #check

backend cortijo_camera
  mode http
  server camera 192.168.1.53:8400 check

backend cortijo_socket
  mode http
  server camera 192.168.1.53:8200 check

backend cortijo_file
  mode http
  server file 192.168.1.53:8500 check

backend router
  mode http
  server router1 192.168.1.1 #check

backend gitlab
  mode http
  server gitlab1 192.168.1.43:8065 #check
  server gitlab2 192.168.1.43:8066 #check

backend ssh_gitlab
  mode http
  server gitlab1 192.168.1.43:2224 #check

backend octopi
  mode http
  server octopi 192.168.1.35:80 check

backend dockerhub
  mode http
  server dockerhub1 192.168.1.43:5000 #check

backend couchbase
  mode http
  server couchbase1 192.168.1.43:8091 #check

backend cortijo_ws
  mode http
  server ws   192.168.1.53:3000 check
  #server ws_1 192.168.1.53:3001 #check

backend cortijo_haproxy
  mode http
  server haproxy 192.168.1.53:9000 check
